service: y2123-api
app: core
org: shankqr
frameworkVersion: "3"

plugins:
  - serverless-lift
  - serverless-domain-manager
  - serverless-dotenv-plugin
  - serverless-offline
custom:
  domain:
    dev: api-dev.y2123.io
    prod: api.y2123.io
  customDomain:
    http:
      domainName: ${self:custom.domain.${opt:stage, 'dev'}}
      basePath: ""
      stage: ${self:provider.stage}
      certificateName: "*.y2123.io"
      createRoute53Record: true
      enabled: true
      securityPolicy: tls_1_2
      endpointType: regional
      apiType: http

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage,'dev'}
  region: us-east-1
  httpApi:
    cors: true
  environment:
    METADATA_TABLE: "${self:provider.stage}-metadata"
    CLANS_METADATA_TABLE: "${self:provider.stage}-clans-metadata"

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:BatchGetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
            - "secretsmanager:GetSecretValue"
          Resource:
            - "*"

constructs:
  commands:
    type: queue
    worker:
      handler: src/discord.sender

functions:
  discordHello:
    handler: src/discord.discordHandler
    reservedConcurrency: 1
    events:
      - httpApi:
          path: /discord
          method: post
  discordEndpoint:
    handler: src/discord.endpoint
    reservedConcurrency: 1
    events:
      - httpApi:
          path: /discordEndpoint
          method: post
    environment:
      QUEUE_URL: ${construct:commands.queueUrl}

  getAsset:
    handler: src/asset.handler
    events:
      - httpApi:
          path: /asset
          method: get
  getAssetClans:
    handler: src/asset-clans.handler
    events:
      - httpApi:
          path: /asset-clans
          method: get
  getClan:
    handler: src/clan.handler
    events:
      - httpApi:
          path: /clan
          method: get
  getAccount:
    handler: src/account.handler
    events:
      - httpApi:
          path: /account
          method: get
  getClaim:
    handler: src/claim.handler
    events:
      - httpApi:
          path: /claim
          method: get